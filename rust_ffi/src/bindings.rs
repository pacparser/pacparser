/* automatically generated by rust-bindgen */

extern "C" {
    #[doc = " @brief Initializes pac parser."]
    #[doc = " @returns 0 on failure and 1 on success."]
    #[doc = ""]
    #[doc = " Initializes JavaScript engine and does few basic initializations specific"]
    #[doc = " to pacparser."]
    pub fn pacparser_init() -> ::std::os::raw::c_int;
}
extern "C" {
    #[doc = " @brief Parses the given PAC script string."]
    #[doc = " @param pacstring PAC string to parse."]
    #[doc = " @returns 0 on failure and 1 on success."]
    #[doc = ""]
    #[doc = " Evaulates the given PAC script string in the JavaScript context created"]
    #[doc = " by pacparser_init."]
    pub fn pacparser_parse_pac_string(
        pacstring: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[doc = " @brief Finds proxy for the given URL and Host."]
    #[doc = " @param url URL to find proxy for."]
    #[doc = " @param host Host part of the URL."]
    #[doc = " @returns proxy string on sucess and NULL on error."]
    #[doc = ""]
    #[doc = " Finds proxy for the given URL and Host. This function should be called only"]
    #[doc = " after pacparser engine has been initialized (using pacparser_init) and pac"]
    #[doc = " script has been parsed (using pacparser_parse_pac_file or"]
    #[doc = " pacparser_parse_pac_string)."]
    pub fn pacparser_find_proxy(
        url: *const ::std::os::raw::c_char,
        host: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    #[doc = " @brief Destroys JavaSctipt context."]
    #[doc = ""]
    #[doc = " This function should be called once you're done with using pacparser engine."]
    pub fn pacparser_cleanup();
}
